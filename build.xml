<?xml version="1.0"?>
<project name="mennov1" default="main" basedir=".">
  <property name="src.dir" value="src"/>
  <property name="build.dir" value="build"/>
  <property name="classes.dir" value="${build.dir}/classes"/>
  <property name="resources.dir" value="resources"/>
  <property name="jar.dir" value="${build.dir}/jar"/>
  <property name="main-class" value="mennov1.MennoV1"/>
  <property name="test-class" value="mennov1.ThuisTester"/>
  <property name="lib.dir" value="lib"/>
  <property name="doc.dir" value="doc"/>

  <path id="classpath">
    <fileset dir="${lib.dir}" includes="**/*.jar" />
  	<!-- Op een mac kunnen er bij gebruik van macports dingen in /opt/local/lib/libopencv_* staan -->
    <!-- Maar het is de bedoeling dat deze bestanden in een .jar verpakt zitten -->
  </path>

  <target name="clean">
    <delete dir="${classes.dir}"/>
    <delete dir="${jar.dir}"/>
    <delete dir="${build.dir}"/>
  </target>
  <target name="prepare" depends="clean">
    <mkdir dir="${build.dir}"/>
    <mkdir dir="${classes.dir}"/>
    <mkdir dir="${jar.dir}"/>
    <mkdir dir="${src.dir}"/>
  </target>

  <!-- De documentatie maken we met "ant doc" -->
  <target name="doc">
    <javadoc sourcepath="${src.dir}"
             destdir="${doc.dir}"
             classpathref="classpath"
             overview="src/overview.html"
             windowtitle="Documentatie Robot">
      <doctitle><![CDATA[<h1>Epische Documentatie van de Robot</h1>]]></doctitle>
      <tag name="todo" scope="all" description="To do:"/>
    </javadoc>
  </target>



  <!-- Op de Robot hardware (Raspberry Pi) compileren we met "ant main" -->
  <target name="compile" depends="prepare">
    <javac srcdir="${src.dir}" destdir="${classes.dir}" classpathref="classpath" />
  </target>
  <target name="jar" depends="compile">
    <jar destfile="${jar.dir}/${ant.project.name}.jar">
      <fileset dir="${classes.dir}"/>
      <fileset dir="${resources.dir}"/>
      <manifest>
        <attribute name="Main-Class" value="${main-class}"/>
      </manifest>
    </jar>
  </target>
  <target name="run" depends="jar">
    <java fork="true" classname="${main-class}">
          <classpath>
                  <path refid="classpath" />
                  <path location="${jar.dir}/${ant.project.name}.jar" />
          </classpath>
          <sysproperty key="java.library.path" path="/usr/lib" />
    </java>
  </target>
  <target name="main" depends="run">
    <echo message="main target completed.." />
  </target>
  

  <!-- Thuis compileren we met "ant test" -->
  <target name="test" depends="prepare">
    <javac srcdir="${src.dir}" destdir="${classes.dir}" classpathref="classpath" />
    <jar destfile="${jar.dir}/test-${ant.project.name}.jar">
      <fileset dir="${classes.dir}"/>
      <fileset dir="${resources.dir}"/>
      <manifest>
        <attribute name="Main-Class" value="${test-class}"/>
      </manifest>
    </jar>
    <java fork="true" classname="${test-class}">
          <classpath>
                  <path refid="classpath" />
                  <path location="${jar.dir}/test-${ant.project.name}.jar" />
          </classpath>
    </java>
    <echo message="test target completed.." />
  </target>
  
  <!--
    Als we al een test jar hebben (die misschien elders vandaan komt),
    kunnen we hiermee classpath-gedoe omzeilen
  -->
  <target name="runtest">
    <java fork="true" classname="${test-class}">
          <classpath>
                  <path refid="classpath" />
                  <path location="${jar.dir}/test-${ant.project.name}.jar" />
          </classpath>
    </java>
  </target>


</project>
